@page
@model StockDamage.Web.Pages.StockDamageModel
@{
    ViewData["Title"] = "Stock Damage";
}

<div class="card shadow-sm">
    <div class="card-header d-flex align-items-center justify-content-between">
        <h5 class="mb-0"><i class="bi bi-box-seam me-2"></i>Stock Damage</h5>
        <span class="text-light small">@DateTime.Now.ToString("dd/MM/yyyy")</span>
    </div>
    <div class="card-body">
        <form id="stockDamageForm">
            @Html.AntiForgeryToken()
            <div class="row g-3 mb-3">
                <div class="col-md-3">
                    <label class="form-label">Date</label>
                    <input type="date" class="form-control" name="Date" value="@Model.Input.Date.ToString("yyyy-MM-dd")" required />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Voucher No</label>
                    <input type="text" class="form-control" name="VoucherNo" placeholder="Auto generated Voucher Number" value="@Model.Input.VoucherNo" data-default="@Model.Input.VoucherNo" readonly />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Warehouse Name</label>
                    <select class="form-select" name="GodownNo" id="warehouseSelect" required>
                        <option value="">Select Warehouse</option>
                        @foreach (var warehouse in Model.Godowns)
                        {
                            <option value="@warehouse.GodownNo" data-name="@warehouse.GodownName">@warehouse.GodownName</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Currency</label>
                    <select class="form-select" name="CurrencyName" id="currencySelect" required>
                        <option value="">Select Currency</option>
                        @foreach (var currency in Model.Currencies)
                        {
                            <option value="@currency.CurrencyName" data-rate="@currency.ConversionRate">@currency.CurrencyName</option>
                        }
                    </select>
                </div>
            </div>

            <div class="row g-3 mb-3">
                <div class="col-md-3">
                    <label class="form-label">Item Name</label>
                    <select class="form-select" name="SubItemCode" id="itemSelect" required>
                        <option value="">Select Item</option>
                        @foreach (var item in Model.SubItems)
                        {
                            <option value="@item.SubItemCode" data-unit="@item.Unit" data-name="@item.SubItemName">@item.SubItemName</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Item Code</label>
                    <input type="text" class="form-control" id="itemCode" readonly />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Unit</label>
                    <input type="text" class="form-control" id="itemUnit" readonly />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Stock</label>
                    <input type="text" class="form-control" id="itemStock" readonly />
                </div>
            </div>

            <div class="row g-3 mb-3">
                <div class="col-md-3">
                    <label class="form-label">Batch No</label>
                    <input type="text" class="form-control" name="BatchNo" id="batchNo" value="NA" data-default="NA" />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Exchange Rate (in BDT)</label>
                    <input type="number" step="0.01" class="form-control" name="CurrencyRate" id="exchangeRate" readonly />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Quantity</label>
                    <input type="number" step="0.01" class="form-control" name="Quantity" id="quantity" required />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Rate</label>
                    <input type="number" step="0.01" class="form-control" name="Rate" id="rate" required />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Amount In</label>
                    <input type="number" step="0.01" class="form-control" name="AmountIn" id="amountIn" required />
                </div>
            </div>

            <div class="row g-3 mb-3">
                <div class="col-md-3">
                    <label class="form-label">Dr A/C Head</label>
                    <input type="text" class="form-control" name="DrAccountHead" id="drAccountHead" value="@Model.Input.DrAccountHead" data-default="@Model.Input.DrAccountHead" />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Employee Name</label>
                    <select class="form-select" name="EmployeeId" id="employeeSelect" required>
                        <option value="">Select Employee</option>
                        @foreach (var employee in Model.Employees)
                        {
                            <option value="@employee.EmployeeId" data-name="@employee.EmployeeName">@employee.EmployeeName</option>
                        }
                    </select>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Comments</label>
                    <textarea class="form-control" name="Comments" id="comments" rows="1" placeholder="Comments..."></textarea>
                </div>
            </div>

            <div class="d-flex justify-content-end">
                <button type="button" class="btn btn-primary" id="addRowBtn"><i class="bi bi-plus-lg me-1"></i>Add</button>
            </div>
        </form>
    </div>
</div>

<div class="card mt-4 shadow-sm">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-bordered align-middle" id="itemsTable">
                <thead class="table-light">
                    <tr>
                        <th>SL#</th>
                        <th>Warehouse Name</th>
                        <th>Item Name</th>
                        <th>Item Code</th>
                        <th>Unit</th>
                        <th>Stock</th>
                        <th>Batch No</th>
                        <th>Currency</th>
                        <th>Quantity</th>
                        <th>Rate</th>
                        <th>Amount In</th>
                        <th>Exchange Rate (in BDT)</th>
                        <th>Dr A/C Head</th>
                        <th>Employee Name</th>
                        <th>Comments</th>
                        <th class="text-center">Edit</th>
                        <th class="text-center">Delete</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="no-data">
                        <td colspan="17" class="text-center text-muted">No matching records found</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="d-flex justify-content-end mt-3">
            <div class="me-3">
                <strong>Total Amount:</strong>
                <span id="totalAmount">0.00</span>
            </div>
            <button type="button" class="btn btn-success" id="saveBtn"><i class="bi bi-check-circle me-1"></i>Save</button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const initialEmployees = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Employees));
        const initialCurrencies = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Currencies));
        const initialGodowns = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Godowns));
        const initialItems = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.SubItems));
    </script>
}
